pipeline {

properties([
  parameters([
// Deploy New User Cluster and ACM
    string(name: 'gke_cluster_name', defaultValue: "megatron", description: 'Your GKE Cluster Name', trim: true),
    string(name: 'gke_namespace', defaultValue: "hipster", description: 'The namespace you want to install in', trim: true),
    string(name: 'gke_location', defaultValue: "us-west1-b", description: 'Your GKE Cluster Location', trim: true)
    ])])

  environment {
      PROJECT_ID = 'ignw-anthos-lab-pod1a'
      CLUSTER_NAME = '${params.gke_cluster_name}'
      NAMESPACE = '${params.gke_namespace}'
      LOCATION = '${params.gke_location}'
      SVC_ACC_KEY = 'svc_acc_key'
  }

  agent {
    kubernetes {
      label 'hipster-app'
      defaultContainer 'jnlp'
      yaml """
apiVersion: v1
kind: Pod
metadata:
labels:
  component: ci
spec:
  containers:
  - name: kubectl
    image: thilavanh/centos-kubectl
    command:
    - cat
    tty: true
"""
}
  }
  stages{
    stage('Deploy Hipster') {
      steps{
        container('kubectl') {
        step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, namespace: env.NAMESPACE, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'hipster-all-deploy/deployments.yaml', credentialsId: env.SVC_ACC_KEY, verifyDeployments: false])
        step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, namespace: env.NAMESPACE, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'hipster-all-deploy/services.yaml', credentialsId: env.SVC_ACC_KEY, verifyDeployments: false])
        step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, namespace: env.NAMESPACE, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'hipster-all-deploy/gateway.yaml', credentialsId: env.SVC_ACC_KEY, verifyDeployments: false])
        }
      }
    }}
  }
